digraph G {
u53[label="hd"];
u54[label="xs"];
u55[label="(hd , xs)"];
u56[label="helper"];
u57[label="hd :: xs"];
u58[label="tl"];
u59[label="$x"];
u60[label="xs"];
u61[label="helper (hd :: xs) tl"];
u62[label="match $x with\n| [] -> xs\n| hd :: tl -> helper (hd :: xs) tl"];
u63[label="fun $x ->\n  match $x with\n  | [] -> xs\n  | hd :: tl -> helper (hd :: xs) tl"];
u64[label="helper"];
u65[label="[]"];
u66[label="helper []"];
u67[label="fun xs ->\n  fun $x ->\n    match $x with\n    | [] -> xs\n    | hd :: tl -> helper (hd :: xs) tl"];
u68[label="let rec helper =\n  fun xs ->\n    fun $x ->\n      match $x with\n      | [] -> xs\n      | hd :: tl -> helper (hd :: xs) tl in\nhelper []"];
u69[label="fun l ->\n  let rec helper =\n    fun xs ->\n      fun $x ->\n        match $x with\n        | [] -> xs\n        | hd :: tl -> helper (hd :: xs) tl in\n  helper []"];
u70[label="listReverse"];
u71[label="w"];
u72[label="listReverse w"];
u73[label="w"];
u74[label="listReverse w = w"];
u75[label="if listReverse w = w\nthen true\nelse false"];
u76[label="fun (w : char list) ->\n  if listReverse w = w\n  then true\n  else false"];
u77[label="palindrome"];
u78[label="palindrome ('a' :: [])"];
u79[label="[]"];
u80[label="('a' , [])"];
u81[label="'a'"];
u82[label="[]"];
u83[label="'a' :: []"];
u84[label="(fun (w : char list) ->\n  if listReverse w = w\n  then true\n  else false) ('a' :: [])"];
u85[label="('a' , [])"];
u86[label="'a' :: []"];
u87[label="('a' , [])"];
u88[label="(fun (w : char list) ->\n  if listReverse w = w\n  then true\n  else false) ('a' :: [])"];
u89[label=":: ('a' , [])"];
u90[label="(fun (w : char list) ->\n  if listReverse w = w\n  then true\n  else false) (:: ('a' , []))"];
u91[label="fun (w : char list) ->\n  if listReverse w = w\n  then true\n  else false"];
u92[label="['a']"];
u93[label="(fun (w : char list) ->\n  if listReverse w = w\n  then true\n  else false) ['a']"];
u94[label="listReverse"];
u95[label="listReverse w"];
u96[label="listReverse w = w"];
u97[label="if listReverse w = w\nthen true\nelse false"];
u98[label="w"];
u99[label="(fun l ->\n  let rec helper =\n    fun xs ->\n      fun $x ->\n        match $x with\n        | [] -> xs\n        | hd :: tl -> helper (hd :: xs) tl in\n  helper []) w"];
u100[label="fun l ->\n  let rec helper =\n    fun xs ->\n      fun $x ->\n        match $x with\n        | [] -> xs\n        | hd :: tl -> helper (hd :: xs) tl in\n  helper []"];
u101[label="['a']"];
u102[label="(fun l ->\n  let rec helper =\n    fun xs ->\n      fun $x ->\n        match $x with\n        | [] -> xs\n        | hd :: tl -> helper (hd :: xs) tl in\n  helper []) w = w"];
u103[label="if (fun l ->\n  let rec helper =\n    fun xs ->\n      fun $x ->\n        match $x with\n        | [] -> xs\n        | hd :: tl -> helper (hd :: xs) tl in\n  helper []) w = w\nthen true\nelse false"];
u104[label="hd"];
u105[label="xs"];
u106[label="(hd , xs)"];
u107[label="helper"];
u108[label="hd :: xs"];
u109[label="tl"];
u110[label="$x"];
u111[label="xs"];
u112[label="helper (hd :: xs) tl"];
u113[label="fun $x ->\n  match $x with\n  | [] -> xs\n  | hd :: tl -> helper (hd :: xs) tl"];
u114[label="(fun l ->\n  let rec helper =\n    fun xs ->\n      fun $x ->\n        match $x with\n        | [] -> xs\n        | hd :: tl -> helper (hd :: xs) tl in\n  helper []) ['a']"];
u115[label="fun xs ->\n  fun $x ->\n    match $x with\n    | [] -> xs\n    | hd :: tl -> helper (hd :: xs) tl"];
u116[label="(fun l ->\n  let rec helper =\n    fun xs ->\n      fun $x ->\n        match $x with\n        | [] -> xs\n        | hd :: tl -> helper (hd :: xs) tl in\n  helper []) ['a'] = w"];
u117[label="if (fun l ->\n  let rec helper =\n    fun xs ->\n      fun $x ->\n        match $x with\n        | [] -> xs\n        | hd :: tl -> helper (hd :: xs) tl in\n  helper []) ['a'] = w\nthen true\nelse false"];
u118[label="let rec helper =\n  fun xs ->\n    fun $x ->\n      match $x with\n      | [] -> xs\n      | hd :: tl -> helper (hd :: xs) tl in\nhelper []"];
u119[label="(let rec helper =\n   fun xs ->\n     fun $x ->\n       match $x with\n       | [] -> xs\n       | hd :: tl -> helper (hd :: xs) tl in\n helper []) = w"];
u120[label="if (let rec helper =\n      fun xs ->\n        fun $x ->\n          match $x with\n          | [] -> xs\n          | hd :: tl -> helper (hd :: xs) tl in\n    helper []) = w\nthen true\nelse false"];
u121[label="helper"];
u122[label="helper []"];
u123[label="helper [] = w"];
u124[label="if helper [] = w\nthen true\nelse false"];
u125[label="[]"];
u126[label="(fun xs ->\n  fun $x ->\n    match $x with\n    | [] -> xs\n    | hd :: tl -> helper (hd :: xs) tl) []"];
u127[label="fun xs ->\n  fun $x ->\n    match $x with\n    | [] -> xs\n    | hd :: tl -> helper (hd :: xs) tl"];
u128[label="[]"];
u129[label="(fun xs ->\n  fun $x ->\n    match $x with\n    | [] -> xs\n    | hd :: tl -> helper (hd :: xs) tl) [] = w"];
u130[label="if (fun xs ->\n  fun $x ->\n    match $x with\n    | [] -> xs\n    | hd :: tl -> helper (hd :: xs) tl) [] = w\nthen true\nelse false"];
u131[label="(fun xs ->\n  fun $x ->\n    match $x with\n    | [] -> xs\n    | hd :: tl -> helper (hd :: xs) tl) []"];
u132[label="match $x with\n| [] -> xs\n| hd :: tl -> helper (hd :: xs) tl"];
u133[label="(fun xs ->\n  fun $x ->\n    match $x with\n    | [] -> xs\n    | hd :: tl -> helper (hd :: xs) tl) [] = w"];
u134[label="if (fun xs ->\n  fun $x ->\n    match $x with\n    | [] -> xs\n    | hd :: tl -> helper (hd :: xs) tl) [] = w\nthen true\nelse false"];
u135[label="fun $x ->\n  match $x with\n  | [] -> xs\n  | hd :: tl -> helper (hd :: xs) tl"];
u136[label="(fun $x ->\n  match $x with\n  | [] -> xs\n  | hd :: tl -> helper (hd :: xs) tl) = w"];
u137[label="if (fun $x ->\n  match $x with\n  | [] -> xs\n  | hd :: tl -> helper (hd :: xs) tl) = w\nthen true\nelse false"];
u138[label="w"];
u139[label="(fun $x ->\n  match $x with\n  | [] -> xs\n  | hd :: tl -> helper (hd :: xs) tl) = w"];
u140[label="fun $x ->\n  match $x with\n  | [] -> xs\n  | hd :: tl -> helper (hd :: xs) tl"];
u141[label="['a']"];
u142[label="if (fun $x ->\n  match $x with\n  | [] -> xs\n  | hd :: tl -> helper (hd :: xs) tl) = w\nthen true\nelse false"];
u143[label="(fun $x ->\n  match $x with\n  | [] -> xs\n  | hd :: tl -> helper (hd :: xs) tl) = ['a']"];
u144[label="true"];
u145[label="false"];
u146[label="if (fun $x ->\n  match $x with\n  | [] -> xs\n  | hd :: tl -> helper (hd :: xs) tl) = ['a']\nthen true\nelse false"];
u55 -> u53[label="SubTerm 0"];
u55 -> u54[label="SubTerm 1"];
u57 -> u55[label="SubTerm 0"];
u61 -> u56[label="SubTerm 0"];
u61 -> u57[label="SubTerm 1"];
u61 -> u58[label="SubTerm 2"];
u62 -> u59[label="SubTerm 0"];
u62 -> u60[label="SubTerm 1"];
u62 -> u61[label="SubTerm 2"];
u63 -> u62[label="SubTerm 0"];
u66 -> u64[label="SubTerm 0"];
u66 -> u65[label="SubTerm 1"];
u67 -> u63[label="SubTerm 0"];
u68 -> u66[label="SubTerm 0"];
u68 -> u67[label="SubTerm 1"];
u69 -> u68[label="SubTerm 0"];
u72 -> u70[label="SubTerm 0"];
u72 -> u71[label="SubTerm 1"];
u74 -> u72[label="SubTerm 0"];
u74 -> u73[label="SubTerm 1"];
u75 -> u74[label="SubTerm 0"];
u75 -> u144[label="SubTerm 1"];
u75 -> u145[label="SubTerm 2"];
u76 -> u75[label="SubTerm 0"];
u77 -> u91[label="StepsTo"];
u78 -> u77[label="SubTerm 0"];
u78 -> u83[label="SubTerm 1"];
u78 -> u84[label="StepsTo"];
u79 -> u82[label="StepsTo"];
u80 -> u79[label="SubTerm 1"];
u80 -> u81[label="SubTerm 0"];
u80 -> u85[label="StepsTo"];
u83 -> u80[label="SubTerm 0"];
u83 -> u86[label="StepsTo"];
u84 -> u83[label="SubTerm 1"];
u84 -> u88[label="StepsTo"];
u84 -> u91[label="SubTerm 0"];
u85 -> u81[label="SubTerm 0"];
u85 -> u82[label="SubTerm 1"];
u85 -> u87[label="StepsTo"];
u86 -> u85[label="SubTerm 0"];
u86 -> u89[label="StepsTo"];
u88 -> u86[label="SubTerm 1"];
u88 -> u90[label="StepsTo"];
u88 -> u91[label="SubTerm 0"];
u89 -> u87[label="SubTerm 0"];
u89 -> u92[label="StepsTo"];
u90 -> u89[label="SubTerm 1"];
u90 -> u91[label="SubTerm 0"];
u90 -> u93[label="StepsTo"];
u93 -> u91[label="SubTerm 0"];
u93 -> u92[label="SubTerm 1"];
u93 -> u97[label="StepsTo"];
u94 -> u100[label="StepsTo"];
u95 -> u94[label="SubTerm 0"];
u95 -> u98[label="SubTerm 1"];
u95 -> u99[label="StepsTo"];
u96 -> u95[label="SubTerm 0"];
u96 -> u102[label="StepsTo"];
u96 -> u138[label="SubTerm 1"];
u97 -> u96[label="SubTerm 0"];
u97 -> u103[label="StepsTo"];
u97 -> u144[label="SubTerm 1"];
u97 -> u145[label="SubTerm 2"];
u98 -> u101[label="StepsTo"];
u99 -> u98[label="SubTerm 1"];
u99 -> u100[label="SubTerm 0"];
u99 -> u114[label="StepsTo"];
u102 -> u99[label="SubTerm 0"];
u102 -> u116[label="StepsTo"];
u102 -> u138[label="SubTerm 1"];
u103 -> u102[label="SubTerm 0"];
u103 -> u117[label="StepsTo"];
u103 -> u144[label="SubTerm 1"];
u103 -> u145[label="SubTerm 2"];
u106 -> u104[label="SubTerm 0"];
u106 -> u105[label="SubTerm 1"];
u108 -> u106[label="SubTerm 0"];
u112 -> u107[label="SubTerm 0"];
u112 -> u108[label="SubTerm 1"];
u112 -> u109[label="SubTerm 2"];
u113 -> u132[label="SubTerm 0"];
u114 -> u100[label="SubTerm 0"];
u114 -> u101[label="SubTerm 1"];
u114 -> u118[label="StepsTo"];
u115 -> u113[label="SubTerm 0"];
u116 -> u114[label="SubTerm 0"];
u116 -> u119[label="StepsTo"];
u116 -> u138[label="SubTerm 1"];
u117 -> u116[label="SubTerm 0"];
u117 -> u120[label="StepsTo"];
u117 -> u144[label="SubTerm 1"];
u117 -> u145[label="SubTerm 2"];
u118 -> u115[label="SubTerm 1"];
u118 -> u122[label="StepsTo"];
u118 -> u122[label="SubTerm 0"];
u119 -> u118[label="SubTerm 0"];
u119 -> u123[label="StepsTo"];
u119 -> u138[label="SubTerm 1"];
u120 -> u119[label="SubTerm 0"];
u120 -> u124[label="StepsTo"];
u120 -> u144[label="SubTerm 1"];
u120 -> u145[label="SubTerm 2"];
u121 -> u127[label="StepsTo"];
u122 -> u121[label="SubTerm 0"];
u122 -> u125[label="SubTerm 1"];
u122 -> u126[label="StepsTo"];
u123 -> u122[label="SubTerm 0"];
u123 -> u129[label="StepsTo"];
u123 -> u138[label="SubTerm 1"];
u124 -> u123[label="SubTerm 0"];
u124 -> u130[label="StepsTo"];
u124 -> u144[label="SubTerm 1"];
u124 -> u145[label="SubTerm 2"];
u125 -> u128[label="StepsTo"];
u126 -> u125[label="SubTerm 1"];
u126 -> u127[label="SubTerm 0"];
u126 -> u131[label="StepsTo"];
u129 -> u126[label="SubTerm 0"];
u129 -> u133[label="StepsTo"];
u129 -> u138[label="SubTerm 1"];
u130 -> u129[label="SubTerm 0"];
u130 -> u134[label="StepsTo"];
u130 -> u144[label="SubTerm 1"];
u130 -> u145[label="SubTerm 2"];
u131 -> u127[label="SubTerm 0"];
u131 -> u128[label="SubTerm 1"];
u131 -> u135[label="StepsTo"];
u132 -> u110[label="SubTerm 0"];
u132 -> u111[label="SubTerm 1"];
u132 -> u112[label="SubTerm 2"];
u133 -> u131[label="SubTerm 0"];
u133 -> u136[label="StepsTo"];
u133 -> u138[label="SubTerm 1"];
u134 -> u133[label="SubTerm 0"];
u134 -> u137[label="StepsTo"];
u134 -> u144[label="SubTerm 1"];
u134 -> u145[label="SubTerm 2"];
u135 -> u132[label="SubTerm 0"];
u135 -> u140[label="StepsTo"];
u136 -> u135[label="SubTerm 0"];
u136 -> u138[label="SubTerm 1"];
u136 -> u139[label="StepsTo"];
u137 -> u136[label="SubTerm 0"];
u137 -> u142[label="StepsTo"];
u137 -> u144[label="SubTerm 1"];
u137 -> u145[label="SubTerm 2"];
u138 -> u141[label="StepsTo"];
u139 -> u138[label="SubTerm 1"];
u139 -> u140[label="SubTerm 0"];
u139 -> u143[label="StepsTo"];
u142 -> u139[label="SubTerm 0"];
u142 -> u144[label="SubTerm 1"];
u142 -> u145[label="SubTerm 2"];
u142 -> u146[label="StepsTo"];
u143 -> u140[label="SubTerm 0"];
u143 -> u141[label="SubTerm 1"];
u146 -> u143[label="SubTerm 0"];
u146 -> u144[label="SubTerm 1"];
u146 -> u145[label="SubTerm 2"];

}
